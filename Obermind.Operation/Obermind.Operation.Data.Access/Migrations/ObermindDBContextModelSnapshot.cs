// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obermind.Operation.Data.Access.DAL;

namespace Obermind.Operation.Data.Access.Migrations
{
    [DbContext(typeof(ObermindDBContext))]
    partial class ObermindDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Obermind.Operation.Data.Model.PurchaseOrders.ListItem", b =>
                {
                    b.Property<string>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ItemId");

                    b.HasIndex("POId");

                    b.ToTable("ListItem");

                    b.HasData(
                        new
                        {
                            ItemId = "A71C3887-3C19-4695-8249-7C7F1C6A8DA4",
                            Amount = 1000m,
                            CreatedAt = new DateTime(2022, 1, 9, 13, 45, 8, 810, DateTimeKind.Local).AddTicks(9124),
                            IsDeleted = false,
                            Name = "D1 - List Item",
                            POId = "491E44F7-12DA-4470-95BA-D6B01ACBB45A",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ItemId = "E3F1140C-BA46-437F-9234-9CE9D16DA2DF",
                            Amount = 200m,
                            CreatedAt = new DateTime(2022, 1, 9, 13, 45, 8, 812, DateTimeKind.Local).AddTicks(430),
                            IsDeleted = false,
                            Name = "D2 - List Item",
                            POId = "491E44F7-12DA-4470-95BA-D6B01ACBB45A",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ItemId = "2083E168-9B48-4BA9-ABA0-B9252CF6DAD5",
                            Amount = 200m,
                            CreatedAt = new DateTime(2022, 1, 9, 13, 45, 8, 812, DateTimeKind.Local).AddTicks(473),
                            IsDeleted = false,
                            Name = "D3 - List Item",
                            POId = "AD8D7916-EE72-4438-9C5E-90B03EC98857",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Obermind.Operation.Data.Model.PurchaseOrders.PurchaseOrder", b =>
                {
                    b.Property<string>("POId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("POId");

                    b.HasIndex("UserId");

                    b.ToTable("PurchaseOrder");

                    b.HasData(
                        new
                        {
                            POId = "491E44F7-12DA-4470-95BA-D6B01ACBB45A",
                            Amount = 1200m,
                            CreatedAt = new DateTime(2022, 1, 9, 13, 45, 8, 821, DateTimeKind.Local).AddTicks(4699),
                            IsDeleted = false,
                            Name = "D1 - Purchase Order",
                            OrderBy = 1,
                            Status = "SUBMITTED",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            POId = "AD8D7916-EE72-4438-9C5E-90B03EC98857",
                            Amount = 200m,
                            CreatedAt = new DateTime(2022, 1, 9, 13, 45, 8, 821, DateTimeKind.Local).AddTicks(5938),
                            IsDeleted = false,
                            Name = "D2 - Purchase Order",
                            OrderBy = 2,
                            Status = "DRAFT",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Obermind.Operation.Data.Model.Security.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "1549C3D8-6511-41AA-A82E-8DC75FC7E761",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "B2A00501-BF6B-4C7F-A789-5986E769F4FB",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Obermind.Operation.Data.Model.Security.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "e8e5d832-765c-45a8-9650-c16f48f84d1b",
                            Email = "taimurad@hotmail.com",
                            FirstName = "Taimoor",
                            IsDeleted = false,
                            LastName = "Adil",
                            Password = "$2a$11$CWgoGp2KcC/x8VwsglMLgeM6qH7NHtR1WMLdZHJc1PTP3fb7BqbGu",
                            Username = "tab"
                        },
                        new
                        {
                            Id = "49aaee27-f4a5-4db5-95b5-8f7b1550a5bd",
                            Email = "test@mail.com",
                            FirstName = "Obermind",
                            IsDeleted = false,
                            LastName = "Purchase",
                            Password = "$2a$11$kn7vLbQZ5Wg7AwXJUmJpI.ZZi7ZE8RUUb0PQIGJr0BiDjNJBDpF5S",
                            Username = "official"
                        });
                });

            modelBuilder.Entity("Obermind.Operation.Data.Model.Security.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = "F48E075B-C74D-478A-8136-A38B09E7CC63",
                            RoleId = "1549C3D8-6511-41AA-A82E-8DC75FC7E761",
                            UserId = "e8e5d832-765c-45a8-9650-c16f48f84d1b"
                        },
                        new
                        {
                            Id = "212CF5EF-F517-46D8-9AD5-339CEE387C8A",
                            RoleId = "1549C3D8-6511-41AA-A82E-8DC75FC7E761",
                            UserId = "49aaee27-f4a5-4db5-95b5-8f7b1550a5bd"
                        });
                });

            modelBuilder.Entity("Obermind.Operation.Data.Model.PurchaseOrders.ListItem", b =>
                {
                    b.HasOne("Obermind.Operation.Data.Model.PurchaseOrders.PurchaseOrder", "PurchaseOrder")
                        .WithMany("ListItems")
                        .HasForeignKey("POId");
                });

            modelBuilder.Entity("Obermind.Operation.Data.Model.PurchaseOrders.PurchaseOrder", b =>
                {
                    b.HasOne("Obermind.Operation.Data.Model.Security.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Obermind.Operation.Data.Model.Security.UserRole", b =>
                {
                    b.HasOne("Obermind.Operation.Data.Model.Security.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Obermind.Operation.Data.Model.Security.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
